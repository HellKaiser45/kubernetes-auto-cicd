apiVersion: v1
kind: Secret
metadata:
  name: git-credentials
type: Opaque
stringData:
  token: "your github token" # Manually replace this with your GitHub token
---
apiVersion: v1
kind: Secret
metadata:
  name: registry-credentials
type: Opaque
stringData:
  token: "your registry token" # Manually replace this with your registry token
---
apiVersion: v1
kind: Secret
metadata:
  name: github-registry-secret
  namespace: $SERVICE_NAMESPACE
type: kubernetes.io/dockerconfigjson
stringData:
  .dockerconfigjson: |
    {
      "auths": {
        "ghcr.io": {
          "username": "$DOCKER_USERNAME",
          "password": "your registry token"
        }
      }
    }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: $SERVICE_NAME-workflow-sa
  namespace: $SERVICE_NAMESPACE
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: $SERVICE_NAME-workflow-role
rules:
- apiGroups: [ "" ]
  resources: [ "pods", "pods/status" ]
  verbs: [ "get", "list", "watch", "patch", "create", "update", "delete" ]
- apiGroups: [ "" ]
  resources: [ "persistentvolumeclaims" ]
  verbs: [ "get", "list", "watch" ]
- apiGroups: [ "apps" ]
  resources: [ "deployments", "deployments/status" ]
  verbs:
    [
      "get",
      "list",
      "watch",
      "patch",
      "create",
      "update",
      "delete",
      "rollout"
    ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: $SERVICE_NAME-workflow-rolebinding
subjects:
- kind: ServiceAccount
  name: $SERVICE_NAME-workflow-sa
  namespace: $SERVICE_NAMESPACE
roleRef:
  kind: ClusterRole
  name: $SERVICE_NAME-workflow-role
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: version-pvc
  namespace: $SERVICE_NAMESPACE
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
